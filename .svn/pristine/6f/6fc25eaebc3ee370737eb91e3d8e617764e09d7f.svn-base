package com.web.spring.configuration;


import org.apache.ibatis.session.SqlSessionFactory;
import org.mybatis.spring.SqlSessionFactoryBean;
import org.mybatis.spring.SqlSessionTemplate;
import org.mybatis.spring.annotation.MapperScan;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.jdbc.DataSourceBuilder;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import javax.sql.DataSource;

//@Configuration
//// 패키지명
//@MapperScan(value= "com.example.server_01", sqlSessionFactoryRef = "SqlSessionFactory")
public class MybatisConfig {
	
//	@Value("${spring.datasource.mapper-locations}")
//	String mPath;
//	
//	@Bean(name = "dataSource")
//	@ConfigurationProperties(prefix = "spring.datasource")
//	public DataSource DataSource() {
//		return DataSourceBuilder.create().build();
//	}
//	
//	@Bean(name = "SqlSessionFactory")
//	public SqlSessionFactory sqlSessionFactory(@Qualifier("dataSource")
//
//	DataSource DataSource, ApplicationContext applicationContext) throws Exception {
//		SqlSessionFactoryBean sqlssesionFactoryBean = new SqlSessionFactoryBean();
//		SqlSessionFactoryBean.setDataSource(DataSource);
//		
//		SqlSessionFactoryBean.setMaaperLocations(applicationContext.getResources(mPath));
//		
//		return SqlSessionFactoryBean.getObject();
//
//	}
	
	// 컨테이너에 mybatis처리를 위한 등록
	@Bean
	public SqlSessionTemplate sqlSessionTemplate(
			SqlSessionFactory sqlSessionFactory) {
		return new SqlSessionTemplate(sqlSessionFactory);
	}
}
